packages

local install packages
Gloabl  install  packages

package.json 
{
    name:"a",
    class:"ui"
},
{
    name:"b",
    class:"ai"
}

Step to package.json
Step1>
npm init

Step2>
Answer Question
package name: (learnpackage) 
version: (1.0.0) 
description: this is about the  packages
entry point: (index.js) 
test command: 
git repository: 
keywords: angular node
author: edureka
license: (ISC) 

Step3>
enter  yes


How to install package
> npm install --save <packagename>
> npm  install --save  zone.js
> npm  install --save  @aakashdeveloper/create-node-app

Setup angular
Step1>
npm install -g @angular/cli

windows
run command as admin

mac
sudo npm install -g @angular/cli

Step2
go to folder

Step3
make new folder
mkdir firstapp

Step4
cd firstapp

step5
ng new firstapp

step6
cd  firstapp

step7
npm start

step8
http://localhost:4200

///To change port number
change in start script of  package.json
>> ng serve --port 7800

Module=> all declaration happen in module =>NgModule
Component=> html css and logic=>Component
Pipe=> that help to do data  change on runtime=>Pipe & PipeTransform
Services =>  help to connect with third party=>Injectable
Routing=> to navigate between pages=>NgModule


One Main Module & One  main  Component

Angular Compile
angular.json => main.ts => AppModule => AppComponent

tslint.json 
    => to make standard(style guide)
    => Default File (no change)(imp)
tsconfig.json
    => Convert code from .ts => .js(transpile)
    => Default File (no change)(imp)
README.md 
    => Text file withh application information
    => Default File (change require)(not important)
package.json
    => packages, start commond, version description
    => Default File (min change req)(imp)
package-lock.json
    => it contains dependent package
    => Default File (no change req) (not imp)
angular.json
    => metadata & configuration file
    => Default File(min change req)(Imp)
.gitignore
    => file or folder we dont want to push to git
    => Default file(no change req)(not imp)
.editorconfig
    => file to make code standerd in the team
    => Default File(min change)(not imp)
app
    => Complete app  code here
    => (max change)(imp)
assets
    => All Static things
    => (not change)(change req)
browseslist
    => contains all browser it support
    => (not imp) (no change)
favicon.ico
    => just image
    => (not imp)
index.html
    => main html file that loade our first Component
    => (imp) (min change)
main.ts
    => tell which module to load first
    => (no change req) (imp)
style.css
    => main css File
    => (change req) (not imp)

Tables
Alerts
Button
Panels
Glyphicon
Navbars
Forms
input
Modal

///////Binding/////

>>>>>>>One Way Binding<<<<<<<<<<<<
######>> Data Binding {{}}
######>> Property Binding []
######>> Event Binding ()
>>>>>>>Two Way Binding<<<<<<<<<<<<
>>>Data Binding [()]

/***********/
string
number
boolean
any[]

https://ngapi4.herokuapp.com/api/getProducts

//
Directives

*ngFor === forloop
*ngIf === if else

Pipe
uppercase/ Lowercase / currency/ percentage /date/ titlecase
sending data

pipe will take 2 parameter 
1st is value
and we have n number after that

function  add(a,b){
    return a+b;
}

add(1,2)

let add = (a,b) => { return a+b }

var a = ["a","b","c","d"]
undefined
a.indexOf("b")
1
a.indexOf("d")
3
a.indexOf("a")
0
a.indexOf("e")
-1
a.indexOf("h")
-1

var a = 10

var a
a = 10

var we can recdeclare & reassign
let we cannot recdeclare but reassign
const cannot recdeclare nor reassign


// pipe
// cutome Pipe
// Search Bar
// Styles
// Nested a child Component
// pass data from parent to child
// LifeCycle

//OutPut
//Services
//Routing
//Module
//Gaurds
//NgClass
//Git

var a = 10
var b = "my  age is "+a
my age is 10;

var b = `my age is ${a}`

/**************************
    Git learn 
**************************/

git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/git_Learn.git
git push -u origin master

 git branch -a

 